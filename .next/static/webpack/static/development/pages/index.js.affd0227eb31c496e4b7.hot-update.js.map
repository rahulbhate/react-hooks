{"version":3,"file":"static/webpack/static/development/pages/index.js.affd0227eb31c496e4b7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropertiesData from '../src/PropertiesData';\nimport sliderData from '../src/sliderImages'\nimport '../css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '../css/style.css';\nimport Card from '../src/components/Card';\nimport Button from '../src/components/Button';\nimport ImageSlider from '../src/components/ImageSlider';\n\nconst App = () => {\n  const [properties, setproperties] = useState(null);\n  const [property, setProperty] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  function goToPrevSlide() {\n    const newIndex = [property.index - 1];\n    setProperty(properties[newIndex]);\n  }\n  function goToNextSlide() {\n    const newIndex = [property.index + 1];\n    setProperty(properties[newIndex]);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const timeOut = setTimeout(() => {\n      callback();\n    }, 4000);\n\n    function callback() {\n      setproperties(PropertiesData);\n      setProperty(PropertiesData[0]);\n      setIsLoading(false);\n    }\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <Button\n        handleClick={goToNextSlide}\n        disabled={\n          !isLoading && property.index === properties.length - 1 ? true : false\n        }\n        type=\"primary\"\n      >\n        <i class=\"fas fa-chevron-right fa-lg\" />\n      </Button>\n      <Button\n        handleClick={goToPrevSlide}\n        disabled={!isLoading && property.index === 0 ? true : false}\n        type=\"secondary\"\n      >\n        <i class=\"fas fa-chevron-left fa-lg\" />\n      </Button>\n      <div>\n        {isLoading ? (\n          <h4>Loading...</h4>\n        ) : (\n          <div>\n            <div\n              className=\"cards-slider-wrapper\"\n              style={{\n                transform: `translateX(-${property.index *\n                  (100 / properties.length)}%)`,\n              }}\n            >\n              {properties.map((property_, index) => {\n                return (\n                  <Card\n                    property={property_}\n                    statePropertyIndex={property.index}\n                    key={property_._id}\n                  />\n                );\n              })}\n              \n            </div>\n            \n          </div>\n        )}\n       \n      </div>\n      <ImageSlider options={sliderData} />  \n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}